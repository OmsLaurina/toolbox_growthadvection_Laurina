function ga_full_GArun(Nsupply_struct,name_curr,time_0,m_g,dt,nbdays_advec,varargin)


%% GA_FULL_GA_RUN: for a given forcing (mostly nitrate supply and forcing), runs the plankton model alongside Lagrangian trajectories
% then concatene the result into monthly maps.
% 
% Use:
% ga_full_GArun(Nsupply_struct,name_curr,varargin)
%
% Required inputs:
% 	Nsupply_struct 		structure containing .lat, .time, .Nsupply (in mmolC/m3/d), .name (used to save outputs)
% 	name_curr 			prefix of the current dataset to be used (netcdf files as generated by utils/ga_write_ariane_currents into dir_ariane_global/currents_data)
%
% Optional inputs: 
% 	'options_plankton_model' 	options for the plankton model, default {} (e.g. for krill parameterization: {'gmax_big',0.6*0.6,'eZ',0.1*0.6,'mZ',0.05*16/106*0.6})
%
% For instance, to use a krill parameterization:
%	ga_full_GArun(Nsupply_struct,name_curr,'gmax_big',0.6*0.6,'eZ',0.1*0.6,'mZ',0.05*16/106*0.6)
%
% Outputs: (saved in outputs/)
% 	daily trajectories computed by ga_growthadvection (saved yearly)
%	monthly maps (one file)
%
% Monique Messié, 2021 for public version
% Reference: Messié, M., D. A. Sancho-Gallegos, J. Fiechter, J. A. Santora, and F. P. Chavez (2022). 
%			Satellite-based Lagrangian model reveals how upwelling and oceanic circulation shape krill hotspots in the California Current System.
%			Frontiers in Marine Science, in press, https://doi.org/10.3389/fmars.2022.835813
		
global dir_ariane_global dir_output_global
dir_curr=[dir_ariane_global,'currents_data/'];
if nargin<2, error('Need to provide both Nsupply_struct and name_curr'), end
arg=ga_read_varargin(varargin,{'options_plankton_model',{}});
save('inputs/arg','arg')
GArun_name=['test_',name_curr];
		
% Get available time for currents		
curr_list=ga_dir2filenames(dir_curr,[name_curr,'_0*']);
time_curr=nan(length(curr_list),1);
for itime=1:length(curr_list)
	time_curr(itime)=ncread([dir_curr,curr_list{itime}],'time'); 
end
time0=time_0;
m_g=m_g;
%% -------- loop on days
% inputs Nsupply
load('inputs/Nsupply_PROTEVS')
itime_Nsupply = Nsupply_PROTEVS.time(1);
inputs=struct();
inputs.Nsupply=Nsupply_PROTEVS.Nsupply_interp(:,:,1); 
inputs.time=Nsupply_PROTEVS.time;
inputs.Nut=Nsupply_PROTEVS.Nsupply_interp; 
inputs.lon=min(Nsupply_PROTEVS.lon_interp):Nsupply_PROTEVS.lon_interp(3)-Nsupply_PROTEVS.lon_interp(2):max(Nsupply_PROTEVS.lon_interp);
inputs.lat=min(Nsupply_PROTEVS.lat_interp):Nsupply_PROTEVS.lat_interp(3)-Nsupply_PROTEVS.lat_interp(2):max(Nsupply_PROTEVS.lat_interp);

for ilon=1:length(Nsupply_PROTEVS.lon_interp)-1
    for ilat=1:length(Nsupply_PROTEVS.lat_interp)-1
        disp(floor(ilat)+1)
        inputs.Nut(ilat,ilon)=Nsupply_PROTEVS.Nsupply_interp(ilat,ilon); 
    end
end

% stock ini Nut
Nut_file = dir('PHOSPHATE/*nut*.nc');
Nut = double(ncread(Nut_file.name,'po4'));%m
time_mld = double(ncread(Nut_file.name,'time'));%minutes since 1900-01-01 00:00:00
lat_mld = double(ncread(Nut_file.name,'latitude'));
lon_mld = double(ncread(Nut_file.name,'longitude'));

lon_interp = min(lon_mld):m_g:max(lon_mld);
lat_interp = min(lat_mld):m_g:max(lat_mld);
[Xq, Yq] = meshgrid(lon_interp,lat_interp);
Nut = interp2(lon_mld,lat_mld,Nut(:,:,1,1)',Xq, Yq);

for ilon=1:length(lon_interp)
    for ilat=1:length(lat_interp)
        inputs.Nut_stock(ilat,ilon)=inputs.Nut(ilat,ilon,1)*106*1E-3; %to convert in mmolC/m³       
    end
end
inputs.Nut_stock_matrix = inputs.Nut_stock;
inputs.Nut_stock=reshape(inputs.Nut_stock,size(inputs.Nut_stock,1)*size(inputs.Nut_stock,2),1);
save('inputs/inputs','inputs') 

zoo_all=ga_growthadvection(inputs,name_curr,time0,dt,nbdays_advec,'options_plankton_model',arg.options_plankton_model);

save([dir_output_global,'zoo_Lagrangian.mat'],'zoo_all')



%% -------- concatenation into monthly maps

%output_grid=struct('lon',0:0.01:7,'lat',36:0.01:40);
%ga_concatenation(GArun_name,output_grid,{'Z_big','Z_small','P_big','P_small'});


return		
		
		
		
		